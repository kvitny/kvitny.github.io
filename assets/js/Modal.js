"use strict";(self.webpackChunkkvitny=self.webpackChunkkvitny||[]).push([[216],{504:(t,s,e)=>{e.r(s),e.d(s,{default:()=>c});const a="is--visible",n="is--success",i="is--error",o="is--fadeout",l="is--open",r="is--modal-open",m="is--loading";const c=class Modal{constructor(t){this.element=t,this.html=document.documentElement,[this.modalContentInner]=this.element.getElementsByClassName("js-modal-content-inner"),[this.form]=this.element.getElementsByClassName("js-form"),this.requiredInputs=[...this.form.getElementsByClassName("js-required-input")],this.contactVariants=[...this.form.getElementsByClassName("js-contact-variant")],[this.contactVariantInput]=this.form.getElementsByClassName("js-contact-variant-input"),this.submitButtons=[...this.form.getElementsByClassName("js-submit-button")],[this.paymentButton]=this.form.getElementsByClassName("js-payment-button"),[this.toastMessage]=document.getElementsByClassName("js-modal-toast-message"),this.openModalButtons=[...document.getElementsByClassName("js-open-modal")],this.targetOpenModalButton=null,[this.subscriptionSection]=document.getElementsByClassName("js-subscription"),this.bindEvents(),this.toggleSubmitButtonState()}bindEvents(){this.subscriptionSection&&this.subscriptionSection.addEventListener("click",(t=>{const{target:s}=t;s.classList.contains("js-order-subscription")&&(this.targetOpenModalButton=s,this.paymentButton.dataset.value=s.dataset.orderCost,this.openModal())})),this.openModalButtons.forEach((t=>t.addEventListener("click",(()=>{this.targetOpenModalButton=t,this.paymentButton.dataset.value=t.dataset.orderCost,this.openModal()})))),this.submitButtons.forEach((t=>t.addEventListener("click",(()=>t.classList.add(m))))),this.element.addEventListener("click",(t=>{t.target.closest(".js-modal-content")&&!t.target.closest(".js-close-modal")||this.closeModal()})),this.form.addEventListener("submit",(t=>this.submitForm(t))),this.requiredInputs.forEach((t=>t.addEventListener("input",(()=>this.toggleSubmitButtonState())))),this.contactVariants.forEach((t=>t.addEventListener("change",(()=>this.resetContactVariant()))))}openModal(){this.html.classList.add(r),this.element.classList.add(l),this.modalContentInner.scrollTop=0}closeModal(){this.html.classList.remove(r),this.element.classList.remove(l),this.form.reset(),this.submitButtons.forEach((t=>t.classList.remove(m))),this.toggleSubmitButtonState()}toggleSubmitButtonState(){if(!this.requiredInputs.length)return;const t=this.requiredInputs.every((t=>t.value.trim()));this.submitButtons.forEach((s=>s.disabled=!t))}resetContactVariant(){this.contactVariantInput.value=""}submitForm(t){t.preventDefault();const s={order:this.getOrderInfo(),clientInfo:this.getClientInfo()};this.submitButtons.forEach((t=>t.disabled=!0)),setTimeout((()=>{console.log("DATA",s),this.showToastMessage(this.submitButtons[0].classList.contains(m)),this.closeModal()}),2e3)}getOrderInfo(){return{name:this.targetOpenModalButton.dataset.orderInfo,payment:this.paymentButton.classList.contains(m)?"now":"later"}}getClientInfo(){const t={};for(let s=0;s<this.form.elements.length;s++){const e=this.form.elements[s];e.name&&!e.disabled&&"submit"!==e.type&&"button"!==e.type&&(("checkbox"!==e.type&&"radio"!==e.type||e.checked)&&(t[e.name]=e.value.trim()))}return t}showToastMessage(t){this.toastMessage.classList[t?"add":"remove"](n),this.toastMessage.classList[t?"remove":"add"](i),this.toastMessage.classList.add(a),setTimeout((()=>this.hideToastMessage()),4e3)}hideToastMessage(){this.toastMessage.classList.add(o),this.toastMessage.addEventListener("animationend",(()=>{this.toastMessage.classList.remove(a,n,i,o)}),{once:!0})}}}}]);